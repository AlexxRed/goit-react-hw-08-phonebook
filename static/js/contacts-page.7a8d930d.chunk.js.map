{"version":3,"file":"static/js/contacts-page.7a8d930d.chunk.js","mappings":"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","sources":["constants/validationSchema.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n    name: yup.string().required(),\n    number: yup.number().min(8).positive().required(),\n});","\nimport styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const MainForm = styled(Form)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 200px;\n  padding: 20px 20px 20px 20px;\n  border-radius: 10px; \n  border: 2px dotted #2778a7;\n`;\n\nexport const Label = styled.label`\n  font-size: 18px;\n`;\n\nexport const InputForm = styled(Field)`\n  margin-top: 5px;\n  margin-bottom: 20px;\n  padding: 10px;\n  background-color: #868d79;\n`;\n\nexport const ButtonAdd = styled.button`\n  cursor: pointer;\n  border-radius: 4px;\n  padding: 5px 10px;\n  background-color: green;\n  color: white;\n  font-weight: 500;\n  &:hover,\n  &:focus {\n    background-color: #23647e;\n  }\n`;\n\n","import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport { schema } from '../../constants/validationSchema';\nimport { MainForm, Label, InputForm, ButtonAdd } from './ContactForm.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contactsSlice';\nimport { addContactApi } from '../../redux/contactsOperations';\n\n\n\n\nfunction ContactForm() {\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n    const initialValues = {\n        name: '',\n        number: '',\n    };\n\n    const handleSubmit = ({ name, number }, { resetForm }) => {\n        const newContact = {\n            name,\n            number,\n        };\n        if (newContact.number.length < 6) {\n            Notify.info('Phone number must be more than 6 numbers');\n            return\n        }\n        if (contacts.find(contact => contact.name.toLowerCase() === newContact.name.toLowerCase())) {\n            Notify.info('Contact with this name already exists')\n            return\n        }\n        dispatch(addContactApi(newContact))\n        resetForm();\n    };\n    \n    \n    const renderError = message => Notify.info(`${message}`);\n\n    return (\n        <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n        >\n        <MainForm autoComplete=\"off\">\n            <Label htmlFor=\"name\">Name</Label>\n            <InputForm name=\"name\" type=\"text\" placeholder=\"Enter name\" />\n            <ErrorMessage name=\"name\" render={renderError} />\n            <Label htmlFor=\"number\">Number</Label>\n            <InputForm name=\"number\" type=\"tel\" placeholder=\"Enter phone number\" />\n            <ErrorMessage name=\"number\" render={renderError} />\n            <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n        </MainForm>\n        </Formik>\n    );\n}\n\nexport default ContactForm","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n    display:block;\n    margin-left: auto;\n    margin-right: auto;\n    width: 200px;\n    font-size: 18px;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const InputFilter = styled.input`\n        padding: 5px;\n        margin-top: 5px;\n        background-color: #749166;\n`;","import { Label, InputFilter } from './Filter.styled';\nimport { setFilter, getFilterValue } from '../../redux/contactsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilterValue);\n\n    const changeFilter = e => {\n        if (e.target.value === '') {\n            Notify.info('Who are you looking for?')\n        }\n        dispatch(setFilter(e.target.value));\n    };\n\n    return (<Label>\n    Find contacts by name\n        <InputFilter\n            type=\"text\"\n            value={filter}\n            onChange={changeFilter} />\n    </Label>)\n};\n\n\nexport default Filter;","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    display: block;\n    align-items: center;\n    justify-content: center;\n    width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\n\nexport const ItemList = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px dotted #2778a7;\n    &::before {\n        content: '';\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        background-color: #446b85;\n        margin-right: 15px;\n        margin-left: 30px;\n    }\n`;\n\nexport const ButtonDelete = styled.button`\n    cursor: pointer;\n    margin-left: 15px;\n    border-radius: 5px;\n    padding: 5px 10px;\n    background-color: black;\n    color: white;\n    font-weight: 500;\n    &:hover,\n    &:focus {\n        background-color: #25834f;\n    }\n`;\n\nexport const ContactName = styled.span`\n    display:block;\n`;\n\nexport const ContactNumber = styled.a`\n    display:block;\n`;","import { useEffect } from 'react';\nimport { List, ButtonDelete, ItemList, ContactName, ContactNumber } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMemo } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { getContacts, getFilterValue } from '../../redux/contactsSlice';\nimport { fetchAllContacts, deleteContactApi } from '../../redux/contactsOperations';\n\n\n\nconst ContactList = () => {\n  const dispatch = useDispatch()\n  const contacts = useSelector(getContacts)\n  const filter = useSelector(getFilterValue);\n\n  const isLoading = false;\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const visibleContacts = useMemo(\n    () => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(el =>\n        el.name.toLowerCase().includes(normalizedFilter)\n      );\n    }, [contacts, filter]);\n    \n\n  const deleteContact = id => {\n    dispatch(deleteContactApi(id))\n  };\n\n  return (\n    // <p>list</p>\n    <List>\n    {isLoading && <Loader/>}\n    {visibleContacts.length === 0 && <h3>...oops has no contacts :(</h3>}\n    {visibleContacts.map(({ id, name, number, phone }) => (\n      <ItemList key={id}>\n        <p>\n          <ContactName>{name}:</ContactName>\n          <ContactNumber href={`tel:${number??phone}`}>{number??phone}</ContactNumber>\n        </p>\n        <ButtonDelete type=\"button\" onClick={() => deleteContact(id)}>\n          Delete\n        </ButtonDelete>\n      </ItemList>\n    ))}\n  </List>\n);\n}\n\nexport default ContactList;","import styled from '@emotion/styled';\n\nconst Section = styled.div`\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    text-align:center;\n`;\n\nexport default Section;","import ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Section from './ContactsPage.styled';\n\nfunction ContactsPage(){\n    return (\n        <Section>\n            <h1>Phonebook</h1>\n                <ContactForm />\n            <h2>Contacts</h2>\n                <Filter />\n                <ContactList />\n        </Section>\n    )\n};\n\nexport default ContactsPage;\n"],"names":["schema","yup","shape","name","required","number","min","positive","MainForm","styled","Form","Label","InputForm","Field","ButtonAdd","contacts","useSelector","getContacts","dispatch","useDispatch","renderError","message","Notify","initialValues","onSubmit","resetForm","newContact","length","find","contact","toLowerCase","addContactApi","validationSchema","autoComplete","htmlFor","type","placeholder","render","InputFilter","filter","getFilterValue","value","onChange","e","target","setFilter","List","ItemList","ButtonDelete","ContactName","ContactNumber","useEffect","fetchAllContacts","visibleContacts","useMemo","normalizedFilter","el","includes","map","id","phone","href","onClick","deleteContactApi","deleteContact"],"sourceRoot":""}